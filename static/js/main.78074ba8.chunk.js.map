{"version":3,"sources":["ResultsComponent.js","ResultsListHeader.js","ResultsList.js","SearchComponent.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","ResultsComponent","status","time","location","name","Grid","container","xs","direction","item","justify","alignItems","Typography","style","color","green","blue","Divider","marginBottom","ResultsListHeader","ResultsList","k","useState","localStorage","getItem","storedData","setStoredData","listData","setListData","listLength","setListLength","resultComponentList","setResultComponentList","useEffect","window","console","log","parsedObject","JSON","parse","len","Object","keys","length","result","i","value","push","success","match_loc","searchBox","display","position","top","left","right","stayHidden","visibility","show","SearchComponent","setListUpdate","classes","searchWord","setSearchWord","searchResult","setSearchResult","vanishText","setVanishText","onload","e","fetchURL","encodeURIComponent","sleepAndVanish","className","FormControl","fullWidth","InputLabel","htmlFor","Input","id","onChange","target","marginTop","marginLeft","Button","variant","type","size","onClick","document","getElementById","fetch","method","then","res","json","data","undefined","d","Date","toLocaleString","Number","localStorageObject","newObject","0","setItem","stringify","setTimeout","root","flexGrow","Main","listUpdate","backgroundColor","transform","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78074ba8.chunk.js","sourcesContent":["import { blue, green } from \"@material-ui/core/colors\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport React from \"react\";\nimport \"./App.css\";\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction ResultsComponent({ status, time, location, name }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container xs={12} direction=\"column\">\n      <Grid\n        item\n        container\n        xs={12}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          item\n          xs={1}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>\n            {status ? (\n              <DoneIcon style={{ color: green[500] }} />\n            ) : (\n              <CachedIcon style={{ color: blue[500] }} />\n            )}\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={3}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>{time}</Typography>\n        </Grid>\n        <Grid\n          item\n          xs={2}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>{location}</Typography>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography> {name}</Typography>\n        </Grid>\n      </Grid>\n      <Divider style={{ marginBottom: 10}}/>\n    </Grid>\n  );\n}\n\nexport default ResultsComponent;\n","import Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport \"./App.css\";\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction ResultsListHeader() {\n  const classes = useStyles();\n\n  return (\n    <Grid container xs={12} direction=\"column\">\n      <Grid\n        item\n        container\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid\n          item\n          xs={1}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>status</Typography>\n        </Grid>\n        <Grid\n          item\n          xs={3}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>time</Typography>\n        </Grid>\n        <Grid\n          item\n          xs={2}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>Location</Typography>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography>Protein Name</Typography>\n        </Grid>\n      </Grid>\n      <Divider style={{ marginBottom: 10}}/>\n    </Grid>\n  );\n}\n\nexport default ResultsListHeader;\n","import Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport times from \"lodash/times\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ResultsComponent from \"./ResultsComponent\";\nimport ResultsListHeader from \"./ResultsListHeader\";\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction ResultsList({ k }) {\n  const classes = useStyles();\n\n  const [storedData, setStoredData] = useState(\n    localStorage.getItem(\"proteinSearchData\")\n  );\n\n  const [listData, setListData] = useState({});\n  const [listLength, setListLength] = useState();\n  const [resultComponentList, setResultComponentList] = useState([]);\n  \n  useEffect(()=> {\n  }, [resultComponentList])\n  \n  useEffect(() => {\n    \n      setStoredData(window.localStorage.getItem(\"proteinSearchData\"));\n      console.log(\"Done printing local Storage\")\n    }, [k]);\n\n  useEffect(() => {\n    if (storedData !== null) {\n      const parsedObject = JSON.parse(storedData);\n      console.log(\"Printing stored data where more is added\")\n      console.log(parsedObject);\n      const len = Object.keys(parsedObject).length;\n      setListData(parsedObject);\n\n      setListLength(len);\n    }\n  }, [storedData]);\n\n  useEffect(() => {\n    console.log(\"Printing stored data for check after\")\n    const parsedObject = JSON.parse(storedData);\n    console.log(parsedObject);\n    console.log(\"Done\")\n  }, [storedData]);\n\n  useEffect(() => {\n    console.log(\"ListData getting modified\")\n    let result = [];\n    for (let i = listLength - 1; i >= 0; i--) {\n      const value = listData[\"\" + i];\n      console.log(value);\n      result.push(\n        <ResultsComponent\n          key={i}\n          status={value.success}\n          time={value.time}\n          location={value.match_loc}\n          name={value.name}\n        />\n      );\n    }\n    console.log(result)\n    setResultComponentList(result);\n  }, [listData, listLength]);\n\n  return (\n    <Grid\n      item\n      container\n      xs={12}\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={12}>\n        <ResultsListHeader />\n        { resultComponentList }\n      </Grid>\n      <Grid item xs={12}></Grid>\n    </Grid>\n  );\n}\n\nexport default ResultsList;\n","import { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useState, useEffect } from \"react\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\n\nimport \"./App.css\";\nconst useStyles = makeStyles((theme) => ({\n  searchBox: {\n    display: \"flex\",\n    position: \"fixed\",\n    top: 240,\n    left: 50,\n    right: 0,\n  },\n  stayHidden: {\n    visibility: \"hidden\",\n  },\n  show: {\n    visibility: \"visible\",\n  },\n}));\n\nfunction SearchComponent({ setListUpdate }) {\n  const classes = useStyles();\n\n  const [searchWord, setSearchWord] = useState();\n  const [searchResult, setSearchResult] = useState({});\n  const [vanishText, setVanishText] = useState(false);\n\n  useEffect(() => {\n    window.onload = (e) => {\n      setVanishText(true);\n    };\n  }, []);\n\n  const fetchURL = `http://167.99.150.45:3040/dnatoprotein/relax?q=${encodeURIComponent(\n    searchWord\n  )}`;\n\n  function handleTextFieldChange(e) {\n    setSearchWord(e.target.value);\n  }\n\n  function sleepAndVanish() {\n    console.log(\"Put to vanish!\");\n    setVanishText(true);\n  }\n  function handleSearchButton(e) {\n    document.getElementById(\"dna-textField-input\").value = \"\";\n    setVanishText(false);\n    fetch(fetchURL, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data === undefined) {\n          //In case something goes wrong\n          console.log(\"Undefined Data\");\n        } else {\n          console.log(searchWord);\n          console.log(\"inside data retreive\");\n          console.log(data);\n          setSearchResult(data);\n          const d = new Date().toLocaleString(); // 11/16/2015, 11:18:48 PM\n          data.time = d;\n          if (Number(data.success) === 0) {\n            setSearchResult(0);\n          } else {\n            const localStorageObject = localStorage.getItem(\n              \"proteinSearchData\"\n            );\n            if (localStorageObject === null) {\n              const newObject = { 0: data };\n              localStorage.setItem(\n                \"proteinSearchData\",\n                JSON.stringify(newObject)\n              );\n              setListUpdate(true);\n            } else {\n              const parsedObject = JSON.parse(localStorageObject);\n              console.log(parsedObject);\n              const len = Object.keys(parsedObject).length;\n              parsedObject[\"\" + len] = data;\n\n              localStorage.setItem(\n                \"proteinSearchData\",\n                JSON.stringify(parsedObject)\n              );\n              setListUpdate(true);\n            }\n          }\n          setListUpdate(false);\n          setTimeout(sleepAndVanish, 3000);\n        }\n      });\n  }\n\n  return (\n    <Grid\n      item\n      container\n      xs={4}\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.searchBox}\n    >\n      <Grid\n        item\n        container\n        xs={11}\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n      <FormControl fullWidth>\n        <InputLabel htmlFor=\"dna-textField-input\">Enter Sequence Here</InputLabel>\n        <Input id=\"dna-textField-input\" onChange={handleTextFieldChange}/>\n        {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\n      </FormControl>\n\n        {/* <form noValidate autoComplete=\"off\">\n          <TextField\n            id=\"dna-textField-input\"\n            label=\"Enter Sequence Here\"\n            onChange={handleTextFieldChange}\n            fullWidth=\"true\"\n            size=\"medium\"\n            inputProps={{ pattern: \"[a-zA-Z]\" }}\n          ></TextField>\n        </form> */}\n      </Grid>\n      <Grid\n        item\n        container\n        xs={11}\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ marginTop: 40, marginLeft: 30 }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          value=\"Submit\"\n          size=\"large\"\n          onClick={handleSearchButton}\n        >\n          Search\n        </Button>\n      </Grid>\n      <Grid\n        item\n        container\n        xs={11}\n        justify=\"center\"\n        alignItems=\"center\"\n        className={vanishText ? classes.stayHidden : classes.show}\n        style={{ marginTop: 10}}\n      >\n        {searchResult === 0 ? (\n          <Typography>Sorry we couldn't find a match! Try again!</Typography>\n        ) : (\n          <Typography>\n            The DNA Sequence you provided was found at location\n            {searchResult.match_loc} in the {searchResult.name}\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SearchComponent;\n","import Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport \"./App.css\";\nimport ResultsList from \"./ResultsList\";\nimport SearchComponent from \"./SearchComponent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  searchBox: {\n    display: \"flex\",\n    position: \"fixed\",\n    top: 300,\n    left: 0,\n    right: 0,\n  },\n}));\n\nfunction Main() {\n    const classes = useStyles();\n  const [listUpdate, setListUpdate] = useState(false);\n  \n  return (\n    <Grid\n      item\n      container\n      xs={12}\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: 20}}\n    >\n      <Grid\n        item\n        container\n        xs={5}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          <SearchComponent setListUpdate={setListUpdate}/>\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        container\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          <ResultsList k={listUpdate}/>\n\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Main;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport './App.css';\nimport Main from \"./Main\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    backgroundColor: \"#ffffff\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    marginTop: \"20px\"\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}